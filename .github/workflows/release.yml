name: CI/CD, Release Workflow

on:
  push:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    permissions:
      checks: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: ./.github/actions/cache-gradle
        with:
          cache-key-prefix: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/**/*.xml

  build_plugin_and_release_and_publish:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: ./.github/actions/cache-gradle
        with:
          cache-key-prefix: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build plugin
        run: ./gradlew buildPlugin

      - name: Extract version from build.gradle
        id: get_version
        run: |
          echo "VERSION=$(grep '^version' build.gradle.kts | awk -F'\"' '{print $2}')" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload plugin to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/programmers_helper-${{ env.VERSION }}.jar
          asset_name: programmers_helper-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Publish plugin to IntelliJ Marketplace
        run: ./gradlew publishPlugin
        env:
          INTELLIJ_PUBLISH_TOKEN: ${{ secrets.INTELLIJ_PUBLISH_TOKEN }}
          INTELLIJ_PUBLISH_CHANNEL: ${{ secrets.INTELLIJ_PUBLISH_CHANNEL }}
